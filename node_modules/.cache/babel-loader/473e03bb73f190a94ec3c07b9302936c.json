{"ast":null,"code":"var _jsxFileName = \"/Users/amloewi/Code/ladder-of-babel/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { cedict } from \"./medium.js\"; // do one for medium w ... 50k\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; // This was necessary; ugh\n\nimport { Container, Row, Col, Navbar, Button, Nav, Modal, InputGroup, FormControl } from 'react-bootstrap';\n\nclass Translation extends React.Component {\n  constructor(props) {\n    super(props);\n    const translation = [{\n      \"token\": \"在\",\n      \"pinyin\": \"[zai4]\",\n      \"definition\": \"/(located) at/(to be) in/to exist/in the middle of doing sth/(indicating an action in progress)/\"\n    }, {\n      \"token\": \"此\",\n      \"pinyin\": \"[ci3]\",\n      \"definition\": \"/this/these/\"\n    }, {\n      \"token\": \"粘贴\",\n      \"pinyin\": \"[zhan1 tie1]\",\n      \"definition\": \"/to stick/to affix/to adhere/to paste (as in 'copy and paste')/Taiwan pr. [nian2 tie1]/also written 黏貼|黏贴[nian2 tie1]/\"\n    }, {\n      \"token\": \"你\",\n      \"pinyin\": \"[ni3]\",\n      \"definition\": \"/you (informal, as opposed to courteous 您[nin2])/\"\n    }, {\n      \"token\": \"自己\",\n      \"pinyin\": \"[zi4 ji3]\",\n      \"definition\": \"/oneself/one's own/\"\n    }, {\n      \"token\": \"的\",\n      \"pinyin\": \"[de5]\",\n      \"definition\": \"/of/~'s (possessive particle)/(used after an attribute)/(used to form a nominal expression)/(used at the end of a declarative sentence for emphasis)/\"\n    }, {\n      \"token\": \"内容\",\n      \"pinyin\": \"[nei4 rong2]\",\n      \"definition\": \"/content/substance/details/CL:個|个[ge4],項|项[xiang4]/\"\n    }, {\n      \"token\": \"!\",\n      \"pinyin\": \"\",\n      \"definition\": \"\"\n    }];\n    this.state = {\n      translation: translation,\n      text: \"在此粘贴你自己的内容!\",\n      known: 0,\n      unknown: translation.length\n    }; // Would prefer the less insane syntax for this\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      text: event.target.value,\n      translation: this.translate(event.target.value)\n    });\n  }\n\n  toggle(ix) {\n    const updated = this.state.translation.map((word, j) => {\n      if (ix === j) {\n        return { ...word,\n          show: word.show === \"hidden\" ? \"\" : \"hidden\"\n        };\n      } else {\n        return word;\n      }\n    });\n    const known = updated.map(word => word[\"show\"] === \"hidden\").reduce((a, b) => a + b);\n    this.setState({\n      translation: updated,\n      known: known,\n      unknown: updated.length - known\n    });\n  }\n\n  translate(text) {\n    const translation = [];\n    let remaining_characters = text;\n\n    while (remaining_characters.length > 0) {\n      let word_boundary = 1;\n      let best_candidate = null;\n\n      while (remaining_characters.length > 0) {\n        const candidate = remaining_characters.slice(0, word_boundary);\n\n        if (candidate in cedict && word_boundary <= remaining_characters.length) {\n          best_candidate = candidate;\n          word_boundary += 1;\n        } else {\n          // candidate is NOT in the dictionary\n          if (best_candidate != null) {\n            // at least the first character was recognized\n            const line = String(cedict[best_candidate]);\n            const pinyin = line.split(/](.+)/)[0] + \"]\"; // I only want to split on the FIRST ']'; \n\n            const definition = line.split(/](.+)/)[1].slice(1);\n            translation.push({\n              \"token\": best_candidate,\n              \"pinyin\": pinyin,\n              \"definition\": definition\n            });\n          } else {\n            const token = remaining_characters[0];\n            translation.push({\n              \"token\": token,\n              \"pinyin\": \"\",\n              \"definition\": \"\"\n            });\n          }\n\n          if (word_boundary > 1) {\n            remaining_characters = remaining_characters.slice(word_boundary - 1);\n          } else {\n            remaining_characters = remaining_characters.slice(word_boundary);\n          }\n\n          break;\n        }\n      }\n    }\n\n    return translation;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 3,\n        offset: 9\n      },\n      className: \"fixed-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Click to hide familiar words\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 48\n      }\n    }), \"You knew \", this.state.known, \" of these words, \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 57\n      }\n    }), \"and saw \", this.state.unknown, \" new ones!\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 11,\n      className: \"textinput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Paste Chinese Here\")), /*#__PURE__*/React.createElement(FormControl, {\n      onChange: this.handleInputChange,\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    })), \"\\xA0\\xA0\")), this.state.translation.map((word, ix) => /*#__PURE__*/React.createElement(Row, {\n      key: ix,\n      style: {\n        textAlign: \"left\"\n      },\n      onClick: () => this.toggle(ix),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, word[\"token\"]), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      className: word[\"show\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, word[\"pinyin\"]), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      className: word[\"show\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, word[\"definition\"]))));\n  }\n\n}\n\nfunction About() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"About Ladder of Babel\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Ladder of Babel is a tool for beginner and intermediate students of Chinese that makes any (simplified) text accessible by solving a serious problem with most current tools.\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 51\n    }\n  }), \"Tools such as the Google Translate browser plugin, or the similar Mate Translate, are great for translating a single word at a time. They are clearly an enormous improvement over having to search through a paper dictionary. However, they are still designed for people who only need to pick out words one by one, whereas most Chinese language learners both need to translate \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 65\n    }\n  }, \"most\"), \" of the words - and, probably don't even know which combinations of characters\", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }\n  }, \" form\"), \" a single word.\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 39\n    }\n  }), \"Ladder of Babel solves both of these problems by pre-identifying which characters go together, and giving definitions for everything, at once - making the reading experience as seamless and fluent as possible even for early stage students, and opening up the entire world of online Chinese text for easy access, and also productive study.\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"dark\",\n    className: \"\",\n    expand: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    href: \"http://dovecoteinstitute.org\",\n    style: {\n      color: 'white',\n      fontsize: 24 + 'pt'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, \"Dovecote Institute\"), /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    style: {\n      color: 'white',\n      paddingLeft: 130 + 'px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Ladder of Babel\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Translation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"footer\", {\n    style: {\n      textAlign: \"left\"\n    },\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, \"\\xA9 Dovecote Institute 2020\")));\n}\n\nexport default App; // “我有两张自拍，一张很丑，另一张还是很丑”（“在我的后园，可以看见墙外有两株树，一株是枣树，还有一株也是枣树。”——迅哥原文）\n// 100年前的鲁迅万万没有预料到，自己在当下的符号是“中文互联网梗王”、“金句界顶流”。\n// 在各种社会热点的留言评论区，在各大平台的鸡汤文学里，鲁迅语录随处可见；无论搭不搭边，“鲁迅曾经说过”就在那里，从不缺席。\n// 北京鲁迅博物馆为此专门建了一个检索系统，在这里，所有“鲁迅说过的话”都可以被验证或者打脸，该系统还不止一次因为查询人数过多而崩溃。\n// 在互联网的迷幻国度里，人人以为自己熟读鲁迅。\n// 人人不知道的是，这个活在100年前的老男孩，早早已将我们读懂、看透。","map":{"version":3,"sources":["/Users/amloewi/Code/ladder-of-babel/src/App.js"],"names":["React","useState","cedict","Container","Row","Col","Navbar","Button","Nav","Modal","InputGroup","FormControl","Translation","Component","constructor","props","translation","state","text","known","unknown","length","handleInputChange","bind","event","setState","target","value","translate","toggle","ix","updated","map","word","j","show","reduce","a","b","remaining_characters","word_boundary","best_candidate","candidate","slice","line","String","pinyin","split","definition","push","token","render","span","offset","textAlign","About","setShow","handleClose","handleShow","App","color","fontsize","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { cedict } from \"./medium.js\"; // do one for medium w ... 50k\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; // This was necessary; ugh\nimport { Container, Row, Col, Navbar, Button, Nav, Modal, InputGroup, FormControl } from 'react-bootstrap';\n\n\nclass Translation extends React.Component {\n  constructor(props) {\n    super(props);\n    const translation = [{\"token\":\"在\", \"pinyin\":\"[zai4]\", \"definition\": \"/(located) at/(to be) in/to exist/in the middle of doing sth/(indicating an action in progress)/\"},\n    {\"token\":\"此\", \"pinyin\":\"[ci3]\", \"definition\": \"/this/these/\"},\n    {\"token\":\"粘贴\", \"pinyin\":\"[zhan1 tie1]\", \"definition\":\"/to stick/to affix/to adhere/to paste (as in 'copy and paste')/Taiwan pr. [nian2 tie1]/also written 黏貼|黏贴[nian2 tie1]/\"},\n    {\"token\":\"你\", \"pinyin\":\"[ni3]\", \"definition\": \"/you (informal, as opposed to courteous 您[nin2])/\"},\n    {\"token\":\"自己\", \"pinyin\":\"[zi4 ji3]\", \"definition\": \"/oneself/one's own/\"},\n    {\"token\":\"的\", \"pinyin\":\"[de5]\", \"definition\": \"/of/~'s (possessive particle)/(used after an attribute)/(used to form a nominal expression)/(used at the end of a declarative sentence for emphasis)/\"},\n    {\"token\":\"内容\", \"pinyin\":\"[nei4 rong2]\", \"definition\": \"/content/substance/details/CL:個|个[ge4],項|项[xiang4]/\"},\n    {\"token\":\"!\", \"pinyin\":\"\", \"definition\": \"\"}\n  ]\n    this.state = {\n      translation: translation,\n      text: \"在此粘贴你自己的内容!\",\n      known: 0,\n      unknown: translation.length\n    };\n    // Would prefer the less insane syntax for this\n    this.handleInputChange = this.handleInputChange.bind(this)\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      text: event.target.value,\n      translation: this.translate(event.target.value),\n    })\n  }\n\n  toggle(ix) {\n    const updated = this.state.translation.map((word, j) => {\n      if (ix===j) {\n        return {...word, show: word.show === \"hidden\" ? \"\" : \"hidden\"}\n      } else {\n        return word\n      }\n    }) \n    const known = updated.map(word => word[\"show\"]===\"hidden\").reduce((a, b) => a + b)\n\n    this.setState({\n      translation: updated,\n      known: known,\n      unknown: updated.length - known\n    })\n  }\n\n  translate(text) { \n    const translation = []\n    let remaining_characters = text\n    while (remaining_characters.length > 0) {\n        let word_boundary = 1\n        let best_candidate = null\n        while (remaining_characters.length > 0) {\n            const candidate = remaining_characters.slice(0, word_boundary)\n            if ((candidate in cedict) && (word_boundary <= remaining_characters.length)) {\n                best_candidate = candidate\n                word_boundary += 1\n            } else {  // candidate is NOT in the dictionary\n                if (best_candidate != null) {  // at least the first character was recognized\n                  const line = String(cedict[best_candidate])\n                  const pinyin = (line.split(/](.+)/)[0]) + \"]\" // I only want to split on the FIRST ']'; \n                  const definition = (line.split(/](.+)/)[1]).slice(1) \n                  translation.push({\"token\": best_candidate, \"pinyin\": pinyin, \"definition\": definition})\n                } else {\n                    const token = remaining_characters[0]\n                    translation.push({\"token\": token, \"pinyin\": \"\", \"definition\": \"\"})\n                }\n                if (word_boundary > 1) {\n                    remaining_characters = remaining_characters.slice(word_boundary-1)\n                } else {\n                    remaining_characters = remaining_characters.slice(word_boundary)\n                }\n                break\n            }\n        }\n    }\n    return(translation)\n  }\n\n  render() {\n    return(\n      <Container>\n      \n      \n      <Row>\n        <Col md={{span:3, offset:9}} className=\"fixed-top\">\n            <b>Click to hide familiar words</b><br></br>\n            You knew {this.state.known} of these words, <br></br>\n            and saw {this.state.unknown} new ones!\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={11} className=\"textinput\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text>\n                  Paste Chinese Here            \n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl onChange={ this.handleInputChange } value={ this.state.text }/>\n            </InputGroup>\n            &nbsp;&nbsp;\n          </Col>\n        </Row>\n\n        {this.state.translation.map((word, ix) =>\n          <Row key={ix} style={{textAlign: \"left\"}} onClick={() => this.toggle(ix)}>\n            <Col md={1}>{word[\"token\"]}</Col>\n            <Col md={2} className={word[\"show\"]}>{word[\"pinyin\"]}</Col>\n            <Col md={8} className={word[\"show\"]}>{word[\"definition\"]}</Col>\n          </Row>\n        )}\n      </Container>\n    ) \n  }\n}\n\nfunction About() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        About\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>About Ladder of Babel</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Ladder of Babel is a tool for beginner and intermediate students of Chinese that makes any (simplified) text accessible by solving a \n          serious problem with most current tools.<p></p>\n          Tools such as the Google Translate browser plugin, or the similar Mate Translate, are great for translating a single word at a time. They are \n          clearly an enormous improvement over having to search through a paper dictionary. However, they are still designed for people who only need to pick out\n          words one by one, whereas\n          most Chinese language learners both need to translate <b>most</b> of the words - and, probably don't even know which combinations of characters \n           <b> form</b> a single word.<p></p>\n           Ladder of Babel solves both of these problems by pre-identifying which characters go together, and giving definitions for everything, at once - \n           making the reading experience as seamless and fluent as possible even for early stage students, and opening up the entire world of online Chinese\n           text for easy access, and also productive study.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" className=\"\" expand=\"lg\">\n      <Nav.Link href=\"http://dovecoteinstitute.org\" style={{color:'white', fontsize:24+'pt'}}>Dovecote Institute</Nav.Link>      \n        <Nav className=\"mr-auto\"></Nav> {/* Using this to push the rest to the right */}\n        <About />        \n        <Navbar.Brand href=\"#home\" style={{color:'white', paddingLeft:130+'px'}}>Ladder of Babel</Navbar.Brand>        \n      </Navbar>\n\n      <p></p>\n      <Translation />\n      <hr></hr>\n      <footer style={{textAlign: \"left\"}} className=\"container\">\n        <p>&copy; Dovecote Institute 2020</p>\n      </footer>\n    </div>\n\n  );\n}\n\nexport default App;\n\n// “我有两张自拍，一张很丑，另一张还是很丑”（“在我的后园，可以看见墙外有两株树，一株是枣树，还有一株也是枣树。”——迅哥原文）\n// 100年前的鲁迅万万没有预料到，自己在当下的符号是“中文互联网梗王”、“金句界顶流”。\n// 在各种社会热点的留言评论区，在各大平台的鸡汤文学里，鲁迅语录随处可见；无论搭不搭边，“鲁迅曾经说过”就在那里，从不缺席。\n// 北京鲁迅博物馆为此专门建了一个检索系统，在这里，所有“鲁迅说过的话”都可以被验证或者打脸，该系统还不止一次因为查询人数过多而崩溃。\n// 在互联网的迷幻国度里，人人以为自己熟读鲁迅。\n// 人人不知道的是，这个活在100年前的老男孩，早早已将我们读懂、看透。"]},"metadata":{},"sourceType":"module"}