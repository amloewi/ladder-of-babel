"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
// Stores and retrieves items from local storage
function default_1(key, cache, initialValue) {
    if (cache === void 0) { cache = true; }
    // This hook needs state in order to force a re-render when setting/unsetting if cache is true
    var _a = react_1.useState(initialValue), _ = _a[0], setCachedItem = _a[1];
    function getItem() {
        try {
            return JSON.parse(localStorage.getItem(key) || '');
        }
        catch (_a) {
            return undefined;
        }
    }
    function setItem(value) {
        var jsonValue = JSON.stringify(value);
        localStorage.setItem(key, jsonValue);
        if (cache)
            setCachedItem(jsonValue);
    }
    function unsetItem() {
        localStorage.removeItem(key);
        if (cache)
            setCachedItem(null);
    }
    return [getItem(), setItem, unsetItem];
}
exports.default = default_1;
